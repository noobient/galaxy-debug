#!/bin/bash

set -eu

export PORT_FILE='tests/port.list'
export ENV_FILE='tests/env.list'

function find_exec ()
{
    RET=0
    podman --version &> /dev/null && RET=1 || true

    if [ ${RET} -eq 1 ]
    then
        echo 'podman'
    else
        RET=0
        docker --version &> /dev/null && RET=1 || true

        if [ ${RET} -eq 1 ]
        then
            echo 'docker'
        else
            echo ''
        fi
    fi
}

function check_newline ()
{
    if [[ $(tail -c1 "${1}" | wc -l) -gt 0 ]]
    then
        echo 1
    else
        echo 0
    fi
}

function parse_ports ()
{
    port_str=""

    if [ ! -f "${1}" ]
    then
        echo "${port_str}"
        return
    fi

    if [ $(check_newline "${1}") -eq 0 ]
    then
        echo '' >> "${1}"
    fi

    while read -r line
    do
        if [ ! -z "$port_str" ]
        then
            port_str+=" "
        fi

        [[ $line = \#* ]] || [ -z "$line" ] && continue # skip comments & empty lines
        port_str+="-p ${line}"
    done < "${1}"

    echo "${port_str}"
}

export exec=$(find_exec)

if [ -z "${exec}" ]
then
    echo -e "\e[31mError! Container executable not found. Ensure Podman (preferred) or Docker is installed and running.\e[0m"
    exit 1
fi

# TODO since WSL has cgroups v2, we need rw (and no --privileged), otherwise it fails
# https://github.com/moby/moby/issues/42040
if [ "${exec}" == 'docker' ]
then
    extra_flags='-v /sys/fs/cgroup:/sys/fs/cgroup:rw --tmpfs /tmp --tmpfs /run'
else
    extra_flags=''
fi

if [ ! -f 'tests/main.yml' ]
then
    echo -e "\e[31mError! Tests not found. Ensure you're in the right directory.\e[0m"
    exit 2
fi

arguments=()
platform="fedora:38"

while [[ $# -gt 0 ]]
do
    case "${1}" in
      --platform)
        platform="${2}"
        shift 2
        ;;
      *)
        arguments+=("${1}")
        shift 1
        ;;
    esac
done

role=$(basename ${PWD} | sed 's/ansible-galaxy-//')

echo -e "\nRunning Galaxy role tests on:\n - Role: \e[36m${role}\e[0m\n - Platform: \e[36m${platform}\e[0m\n"

# Pull latest image
set +e

${exec} pull "docker.io/bviktor/ansible-systemd-${platform}"

if [ $? -eq 125 ]
then
    echo "Error pulling Docker image! Make sure to login to Docker Hub with '${exec} login docker.io' first."
    echo "If you have MFA enabled, generate an access token at https://hub.docker.com/settings/security and use that instead of your password."
    exit 1
fi

set -e

# Check for port file
PORTS=$(parse_ports "${PORT_FILE}")

# Fire up instance
CONT_ID=$(${exec} run --rm -v $(pwd):/repo ${PORTS} ${extra_flags} --detach "bviktor/ansible-systemd-${platform}")

# Install dependencies
${exec} exec "${CONT_ID}" bash -c "if [ -f requirements.yml ]; then ansible-galaxy role install --force -r requirements.yml -p ..; fi"

# Don't exit the container if errors occur
set +e

# Check for environment file
if [ -f "${ENV_FILE}" ]
then
    ENV_INC="--env-file ${ENV_FILE}"
else
    ENV_INC=''
fi

# Run the actual tests
${exec} exec ${ENV_INC} "${CONT_ID}" bash -c "ANSIBLE_ROLES_PATH=.. ANSIBLE_FORCE_COLOR=true ansible-playbook ${arguments[*]} tests/main.yml"

# Let us check stuff before exiting
${exec} exec -it "${CONT_ID}" bash

# Stop instance
${exec} stop "${CONT_ID}"
